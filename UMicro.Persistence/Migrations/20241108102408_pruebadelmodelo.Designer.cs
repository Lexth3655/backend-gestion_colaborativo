// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UMicro.Persistence.Data;

#nullable disable

namespace UMicro.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241108102408_pruebadelmodelo")]
    partial class pruebadelmodelo
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UMicro.Domain.Modelo.Comentarios", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<string>("contenido")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("fecha_creado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fecha_modificado")
                        .HasColumnType("datetime2");

                    b.Property<int>("tareaID")
                        .HasColumnType("int");

                    b.Property<int>("usuarioID")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("tareaID");

                    b.HasIndex("usuarioID");

                    b.ToTable("comentarios");
                });

            modelBuilder.Entity("UMicro.Domain.Modelo.Notificacion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fechaEnvio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fecha_creado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fecha_modificado")
                        .HasColumnType("datetime2");

                    b.Property<string>("mensaje")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("tipoNotificacion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("userID")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("userID");

                    b.ToTable("notificacions");
                });

            modelBuilder.Entity("UMicro.Domain.Modelo.Permiso", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha_creado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fecha_modificado")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombrePermiso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("permisos");
                });

            modelBuilder.Entity("UMicro.Domain.Modelo.Proyecto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<string>("descripcionProyecto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha_creado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fecha_fin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fecha_inicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fecha_modificado")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombreProyecto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("proyectos");
                });

            modelBuilder.Entity("UMicro.Domain.Modelo.Recurso", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fecha_creado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fecha_modificado")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombreRecurso")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("tareasID")
                        .HasColumnType("int");

                    b.Property<string>("tipoRecurso")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("url")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("id");

                    b.HasIndex("tareasID");

                    b.ToTable("recursos");
                });

            modelBuilder.Entity("UMicro.Domain.Modelo.Rol_Permiso", b =>
                {
                    b.Property<int>("rolID")
                        .HasColumnType("int");

                    b.Property<int>("permisoID")
                        .HasColumnType("int");

                    b.HasKey("rolID", "permisoID");

                    b.HasIndex("permisoID");

                    b.ToTable("rol_Permisos");
                });

            modelBuilder.Entity("UMicro.Domain.Modelo.Roles", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha_creado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fecha_modificado")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombreRol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("UMicro.Domain.Modelo.Sub_Tarea", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<string>("estadoSb")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("fecha_creado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fecha_modificado")
                        .HasColumnType("datetime2");

                    b.Property<int>("tareaID")
                        .HasColumnType("int");

                    b.Property<string>("tituloSb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("tareaID");

                    b.ToTable("subtareas");
                });

            modelBuilder.Entity("UMicro.Domain.Modelo.Tablero", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fecha_creado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fecha_modificado")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombreTablero")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("proyectoID")
                        .HasColumnType("int");

                    b.Property<string>("tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.HasIndex("proyectoID");

                    b.ToTable("tableros");
                });

            modelBuilder.Entity("UMicro.Domain.Modelo.Tarea", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<string>("descrpcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("fecha_creado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fecha_inicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fecha_limite")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fecha_modificado")
                        .HasColumnType("datetime2");

                    b.Property<string>("prioridad")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("tableroID")
                        .HasColumnType("int");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.HasIndex("tableroID");

                    b.ToTable("tareas");
                });

            modelBuilder.Entity("UMicro.Domain.Modelo.Usuario", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha_creado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fecha_modificado")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("rolID")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("UMicro.Domain.Modelo.UsuarioProyecto", b =>
                {
                    b.Property<int>("usuarioID")
                        .HasColumnType("int");

                    b.Property<int>("proyectoID")
                        .HasColumnType("int");

                    b.Property<int>("rolID")
                        .HasColumnType("int");

                    b.HasKey("usuarioID", "proyectoID");

                    b.HasIndex("proyectoID");

                    b.HasIndex("rolID");

                    b.ToTable("usuarioProyectos");
                });

            modelBuilder.Entity("UMicro.Domain.Modelo.Comentarios", b =>
                {
                    b.HasOne("UMicro.Domain.Modelo.Tarea", "Tareas")
                        .WithMany("Comentarios")
                        .HasForeignKey("tareaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UMicro.Domain.Modelo.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("usuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tareas");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("UMicro.Domain.Modelo.Notificacion", b =>
                {
                    b.HasOne("UMicro.Domain.Modelo.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("UMicro.Domain.Modelo.Recurso", b =>
                {
                    b.HasOne("UMicro.Domain.Modelo.Tarea", "Tarea")
                        .WithMany("Recurso")
                        .HasForeignKey("tareasID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tarea");
                });

            modelBuilder.Entity("UMicro.Domain.Modelo.Rol_Permiso", b =>
                {
                    b.HasOne("UMicro.Domain.Modelo.Permiso", "Permiso")
                        .WithMany("Roles_Permiso")
                        .HasForeignKey("permisoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UMicro.Domain.Modelo.Roles", "Roles")
                        .WithMany("Roles_Permiso")
                        .HasForeignKey("rolID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permiso");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("UMicro.Domain.Modelo.Sub_Tarea", b =>
                {
                    b.HasOne("UMicro.Domain.Modelo.Tarea", "Tareas")
                        .WithMany("Subtareas")
                        .HasForeignKey("tareaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tareas");
                });

            modelBuilder.Entity("UMicro.Domain.Modelo.Tablero", b =>
                {
                    b.HasOne("UMicro.Domain.Modelo.Proyecto", "ProyectoT")
                        .WithMany("Tableros")
                        .HasForeignKey("proyectoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProyectoT");
                });

            modelBuilder.Entity("UMicro.Domain.Modelo.Tarea", b =>
                {
                    b.HasOne("UMicro.Domain.Modelo.Tablero", "Tablero")
                        .WithMany("Tareas")
                        .HasForeignKey("tableroID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tablero");
                });

            modelBuilder.Entity("UMicro.Domain.Modelo.Usuario", b =>
                {
                    b.HasOne("UMicro.Domain.Modelo.Roles", "Roles")
                        .WithMany()
                        .HasForeignKey("id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("UMicro.Domain.Modelo.UsuarioProyecto", b =>
                {
                    b.HasOne("UMicro.Domain.Modelo.Proyecto", "Proyecto")
                        .WithMany("UsuarioProyectos")
                        .HasForeignKey("proyectoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("UMicro.Domain.Modelo.Roles", "Roles")
                        .WithMany()
                        .HasForeignKey("rolID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("UMicro.Domain.Modelo.Usuario", "Usuario")
                        .WithMany("UsuarioProyectos")
                        .HasForeignKey("usuarioID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Proyecto");

                    b.Navigation("Roles");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("UMicro.Domain.Modelo.Permiso", b =>
                {
                    b.Navigation("Roles_Permiso");
                });

            modelBuilder.Entity("UMicro.Domain.Modelo.Proyecto", b =>
                {
                    b.Navigation("Tableros");

                    b.Navigation("UsuarioProyectos");
                });

            modelBuilder.Entity("UMicro.Domain.Modelo.Roles", b =>
                {
                    b.Navigation("Roles_Permiso");
                });

            modelBuilder.Entity("UMicro.Domain.Modelo.Tablero", b =>
                {
                    b.Navigation("Tareas");
                });

            modelBuilder.Entity("UMicro.Domain.Modelo.Tarea", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("Recurso");

                    b.Navigation("Subtareas");
                });

            modelBuilder.Entity("UMicro.Domain.Modelo.Usuario", b =>
                {
                    b.Navigation("UsuarioProyectos");
                });
#pragma warning restore 612, 618
        }
    }
}
