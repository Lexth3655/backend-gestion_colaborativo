// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UMicro.Persistence.Data;

#nullable disable

namespace UMicro.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UMicro.Domain.Modelo.Permiso", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<string>("descripcionP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha_creado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fecha_modificado")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombreP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("permisos");
                });

            modelBuilder.Entity("UMicro.Domain.Modelo.Proyecto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<string>("descripcionProyecto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha_creado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fecha_fin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fecha_inicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fecha_modificado")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombreProyecto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("proyectos");
                });

            modelBuilder.Entity("UMicro.Domain.Modelo.ProyectoUsuarioRol", b =>
                {
                    b.Property<int>("usuario_id")
                        .HasColumnType("int");

                    b.Property<int>("proyecto_id")
                        .HasColumnType("int");

                    b.Property<int>("rol_id")
                        .HasColumnType("int");

                    b.Property<int>("proyectoPURid")
                        .HasColumnType("int");

                    b.Property<int>("rolPURid")
                        .HasColumnType("int");

                    b.HasKey("usuario_id", "proyecto_id", "rol_id");

                    b.HasIndex("proyectoPURid");

                    b.HasIndex("rolPURid");

                    b.ToTable("proyectoUsuarioRols");
                });

            modelBuilder.Entity("UMicro.Domain.Modelo.Rol", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<string>("descripcionRol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha_creado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fecha_modificado")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombreRol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("rols");
                });

            modelBuilder.Entity("UMicro.Domain.Modelo.Rol_Permiso", b =>
                {
                    b.Property<int>("id_rol")
                        .HasColumnType("int");

                    b.Property<int>("id_permiso")
                        .HasColumnType("int");

                    b.HasKey("id_rol", "id_permiso");

                    b.HasIndex("id_permiso");

                    b.ToTable("rol_Permisos");
                });

            modelBuilder.Entity("UMicro.Domain.Modelo.Sub_Tarea", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<string>("estadoSb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha_creado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fecha_modificado")
                        .HasColumnType("datetime2");

                    b.Property<int>("id_tarea")
                        .HasColumnType("int");

                    b.Property<int>("tareaid")
                        .HasColumnType("int");

                    b.Property<string>("tituloSb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("tareaid");

                    b.ToTable("Sub_Tarea");
                });

            modelBuilder.Entity("UMicro.Domain.Modelo.TableroKanban", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fecha_creado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fecha_modificado")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombreTablero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("proyecto_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("proyecto_id");

                    b.ToTable("tableroKanbans");
                });

            modelBuilder.Entity("UMicro.Domain.Modelo.Tarea", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<string>("descrpcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estadoT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha_creado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fecha_inicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fecha_limite")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fecha_modificado")
                        .HasColumnType("datetime2");

                    b.Property<int>("id_proyecto")
                        .HasColumnType("int");

                    b.Property<int>("id_usuario_propietario")
                        .HasColumnType("int");

                    b.Property<string>("prioridad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("recurrente")
                        .HasColumnType("int");

                    b.Property<int>("tablero_id")
                        .HasColumnType("int");

                    b.Property<int>("tiempo_invertido")
                        .HasColumnType("int");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("tablero_id");

                    b.ToTable("tareas");
                });

            modelBuilder.Entity("UMicro.Domain.Modelo.Usuario", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("anioCreado")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha_creado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fecha_modificado")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombreU")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("rolID")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("UMicro.Domain.Modelo.ProyectoUsuarioRol", b =>
                {
                    b.HasOne("UMicro.Domain.Modelo.Proyecto", "proyectoPUR")
                        .WithMany("ProyectoUsuarioRols")
                        .HasForeignKey("proyectoPURid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("UMicro.Domain.Modelo.Rol", "rolPUR")
                        .WithMany("ProyectoUsuarioRols")
                        .HasForeignKey("rolPURid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("UMicro.Domain.Modelo.Usuario", "usuarioPUR")
                        .WithMany("ProyectoUsuarioRols")
                        .HasForeignKey("usuario_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("proyectoPUR");

                    b.Navigation("rolPUR");

                    b.Navigation("usuarioPUR");
                });

            modelBuilder.Entity("UMicro.Domain.Modelo.Rol_Permiso", b =>
                {
                    b.HasOne("UMicro.Domain.Modelo.Permiso", "Permiso")
                        .WithMany("RolPermiso")
                        .HasForeignKey("id_permiso")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("UMicro.Domain.Modelo.Rol", "Rol")
                        .WithMany("RolPermiso")
                        .HasForeignKey("id_rol")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Permiso");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("UMicro.Domain.Modelo.Sub_Tarea", b =>
                {
                    b.HasOne("UMicro.Domain.Modelo.Tarea", "tarea")
                        .WithMany("subtareas")
                        .HasForeignKey("tareaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tarea");
                });

            modelBuilder.Entity("UMicro.Domain.Modelo.TableroKanban", b =>
                {
                    b.HasOne("UMicro.Domain.Modelo.Proyecto", "proyecto_tablero")
                        .WithMany("Tableros")
                        .HasForeignKey("proyecto_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("proyecto_tablero");
                });

            modelBuilder.Entity("UMicro.Domain.Modelo.Tarea", b =>
                {
                    b.HasOne("UMicro.Domain.Modelo.TableroKanban", "Tablero")
                        .WithMany("tareasK")
                        .HasForeignKey("tablero_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tablero");
                });

            modelBuilder.Entity("UMicro.Domain.Modelo.Usuario", b =>
                {
                    b.HasOne("UMicro.Domain.Modelo.Rol", "Rols")
                        .WithMany("Usuarios")
                        .HasForeignKey("id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rols");
                });

            modelBuilder.Entity("UMicro.Domain.Modelo.Permiso", b =>
                {
                    b.Navigation("RolPermiso");
                });

            modelBuilder.Entity("UMicro.Domain.Modelo.Proyecto", b =>
                {
                    b.Navigation("ProyectoUsuarioRols");

                    b.Navigation("Tableros");
                });

            modelBuilder.Entity("UMicro.Domain.Modelo.Rol", b =>
                {
                    b.Navigation("ProyectoUsuarioRols");

                    b.Navigation("RolPermiso");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("UMicro.Domain.Modelo.TableroKanban", b =>
                {
                    b.Navigation("tareasK");
                });

            modelBuilder.Entity("UMicro.Domain.Modelo.Tarea", b =>
                {
                    b.Navigation("subtareas");
                });

            modelBuilder.Entity("UMicro.Domain.Modelo.Usuario", b =>
                {
                    b.Navigation("ProyectoUsuarioRols");
                });
#pragma warning restore 612, 618
        }
    }
}
